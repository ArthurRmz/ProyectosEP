apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'

repositories {
    mavenCentral()
    mavenLocal()
}

def COMPONENT_VERSION = "1.1.0"
def CONF_FOLDER = "env/dev"
def AXIS2_VERSION = "1.7.8"
def SPRING_VERSION="3.0.5.RELEASE"
def WILDFLY_HOME = "D:/opt/wildfly-14.0.1.Final"
def NAME = "ConfigurarServicio"

dependencies {
    compile "org.apache.axis2:axis2-xmlbeans:${AXIS2_VERSION}",
    		"org.springframework:spring-jms:${SPRING_VERSION}",
            "org.springframework:spring-context-support:${SPRING_VERSION}",
            "org.apache.axis2:axis2-adb:${AXIS2_VERSION}",
            "org.apache.axis2:axis2-spring:${AXIS2_VERSION}",
            "org.apache.axis2:axis2-kernel:${AXIS2_VERSION}",
            "org.apache.axis2:axis2-transport-local:${AXIS2_VERSION}",
            "org.apache.axis2:axis2-transport-http:${AXIS2_VERSION}",
            "org.apache.xmlbeans:xmlbeans:2.6.0",
            "org.springframework:spring-jdbc:${SPRING_VERSION}",
			"mysql:mysql-connector-java:5.1.6",
			"commons-logging:commons-logging:1.1.1",
            "jboss:jboss-j2ee:4.2.2.GA",
		    "log4j:log4j:1.2.14",
		    files("lib/calidad.jar"),
		    files("lib/paquete.jar")
		    testCompile 'junit:junit:4.12'
}

war {
	archiveName "${NAME}-${COMPONENT_VERSION}.war"
	from("${CONF_FOLDER}") {
		into "WEB-INF/classes"
		include "*.properties"
	}
	webInf {
		from ("${CONF_FOLDER}") {
			include "*.xml"
		}
	}
}

compileJava.dependsOn {
	[clean]
}

// Tarea para copiar temporalmente a una carperta lib las dependencias.
task copyCompileLibs(type: Copy) {
    into "libAxis2"
    from configurations.compile
}

task deploy(type: Copy, dependsOn: war) {
	into "${WILDFLY_HOME}/standalone/deployments"
	from "build/libs"
}